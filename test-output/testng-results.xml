<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="4" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-09T03:32:38 PST" name="Suite" finished-at="2023-02-09T03:32:59 PST" duration-ms="20923">
    <groups>
    </groups>
    <test started-at="2023-02-09T03:32:38 PST" name="Test" finished-at="2023-02-09T03:32:59 PST" duration-ms="20923">
      <class name="script1.Script2">
        <test-method is-config="true" signature="createReport()[pri:0, instance:script1.Script2@2f6e28bc]" started-at="2023-02-09T03:32:38 PST" name="createReport" finished-at="2023-02-09T03:32:38 PST" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
        <test-method is-config="true" signature="openApp(java.lang.reflect.Method)[pri:0, instance:script1.Script2@2f6e28bc]" started-at="2023-02-09T03:32:38 PST" name="openApp" finished-at="2023-02-09T03:32:48 PST" duration-ms="10162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script1.Script2.testB()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testB()[pri:0, instance:script1.Script2@2f6e28bc]" started-at="2023-02-09T03:32:48 PST" name="testB" finished-at="2023-02-09T03:32:48 PST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script1.Script2@2f6e28bc]" started-at="2023-02-09T03:32:48 PST" name="closeApp" finished-at="2023-02-09T03:32:49 PST" duration-ms="768" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testB status=SUCCESS method=Script2.testB()[pri:0, instance:script1.Script2@2f6e28bc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="publishReport()[pri:0, instance:script1.Script2@2f6e28bc]" started-at="2023-02-09T03:32:59 PST" name="publishReport" finished-at="2023-02-09T03:33:00 PST" duration-ms="279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publishReport -->
      </class> <!-- script1.Script2 -->
      <class name="script1.Script1">
        <test-method is-config="true" signature="openApp(java.lang.reflect.Method)[pri:0, instance:script1.Script1@1d0d6318]" started-at="2023-02-09T03:32:49 PST" name="openApp" finished-at="2023-02-09T03:32:58 PST" duration-ms="8591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script1.Script1.testA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testA()[pri:0, instance:script1.Script1@1d0d6318]" started-at="2023-02-09T03:32:58 PST" name="testA" finished-at="2023-02-09T03:32:58 PST" duration-ms="81" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[home page is not displayed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: home page is not displayed
at org.testng.Assert.fail(Assert.java:99)
at script1.Script1.testA(Script1.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script1.Script1@1d0d6318]" started-at="2023-02-09T03:32:58 PST" name="closeApp" finished-at="2023-02-09T03:32:59 PST" duration-ms="1254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA status=FAILURE method=Script1.testA()[pri:0, instance:script1.Script1@1d0d6318] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script1.Script1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
